// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoCap_Data.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NoCap_Data.Migrations
{
    [DbContext(typeof(NoCapContext))]
    [Migration("20251018021951_cambioColor")]
    partial class cambioColor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NoCap_Data.Data.CarritoDetalle", b =>
                {
                    b.Property<int>("CarritoDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarritoDetalleId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<int>("CarritoId")
                        .HasColumnType("integer");

                    b.Property<int?>("ColorId")
                        .HasColumnType("integer");

                    b.Property<double>("PrecioProducto")
                        .HasColumnType("double precision");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("integer");

                    b.Property<int?>("TamañoId")
                        .HasColumnType("integer");

                    b.HasKey("CarritoDetalleId");

                    b.HasIndex("CarritoId");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TamañoId");

                    b.ToTable("CarritoDetalles");
                });

            modelBuilder.Entity("NoCap_Data.Data.Carritos", b =>
                {
                    b.Property<int>("CarritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarritoId"));

                    b.Property<int>("EstadoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("MontoTotal")
                        .HasColumnType("double precision");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("CarritoId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("NoCap_Data.Data.Categorias", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("NoCap_Data.Data.Colores", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ColorId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ColorId");

                    b.ToTable("Colores");

                    b.HasData(
                        new
                        {
                            ColorId = 1,
                            Nombre = "Negro"
                        },
                        new
                        {
                            ColorId = 2,
                            Nombre = "Blanco"
                        },
                        new
                        {
                            ColorId = 3,
                            Nombre = "Gris"
                        },
                        new
                        {
                            ColorId = 4,
                            Nombre = "Azul Marino"
                        },
                        new
                        {
                            ColorId = 5,
                            Nombre = "Beige"
                        });
                });

            modelBuilder.Entity("NoCap_Data.Data.Estados", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EstadoId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("EstadoId");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            EstadoId = 1,
                            Nombre = "Pagado"
                        },
                        new
                        {
                            EstadoId = 2,
                            Nombre = "Pendiente"
                        },
                        new
                        {
                            EstadoId = 3,
                            Nombre = "Agotado "
                        },
                        new
                        {
                            EstadoId = 4,
                            Nombre = "Disponibles"
                        },
                        new
                        {
                            EstadoId = 5,
                            Nombre = "Cancelada"
                        },
                        new
                        {
                            EstadoId = 6,
                            Nombre = "En revision"
                        },
                        new
                        {
                            EstadoId = 7,
                            Nombre = "Comprado"
                        });
                });

            modelBuilder.Entity("NoCap_Data.Data.Inventario", b =>
                {
                    b.Property<int>("InventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InventarioId"));

                    b.Property<int>("CantidadProductos")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaAgregado")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("InventarioId");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("NoCap_Data.Data.InventarioDetalle", b =>
                {
                    b.Property<int>("InventarioDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InventarioDetalleId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<int>("ColorId")
                        .HasColumnType("integer");

                    b.Property<int>("EstadoId")
                        .HasColumnType("integer");

                    b.Property<int>("InventarioId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.Property<int>("TamañoId")
                        .HasColumnType("integer");

                    b.HasKey("InventarioDetalleId");

                    b.HasIndex("ColorId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("InventarioId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TamañoId");

                    b.ToTable("InventarioDetalles");
                });

            modelBuilder.Entity("NoCap_Data.Data.Marcas", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MarcaId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MarcaId");

                    b.ToTable("Marcas");

                    b.HasData(
                        new
                        {
                            MarcaId = 1,
                            Nombre = "New Era"
                        },
                        new
                        {
                            MarcaId = 2,
                            Nombre = "Armani"
                        });
                });

            modelBuilder.Entity("NoCap_Data.Data.OrdenCompra", b =>
                {
                    b.Property<int>("OrdenCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrdenCompraId"));

                    b.Property<int>("CarritoId")
                        .HasColumnType("integer");

                    b.Property<int>("EstadoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaDeCompra")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("Itbis")
                        .HasColumnType("real");

                    b.Property<int>("MontoTotaal")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("OrdenCompraId");

                    b.HasIndex("CarritoId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("OrdenCompras");
                });

            modelBuilder.Entity("NoCap_Data.Data.Pagos", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PagoId"));

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("MontoPagado")
                        .HasColumnType("double precision");

                    b.Property<int>("OrdenCompraId")
                        .HasColumnType("integer");

                    b.Property<bool>("Pagado")
                        .HasColumnType("boolean");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("PagoId");

                    b.HasIndex("OrdenCompraId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("NoCap_Data.Data.Productos", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductoId"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaCreacionProducto")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MarcaId")
                        .HasColumnType("integer");

                    b.Property<double>("PrecioCompraProducto")
                        .HasColumnType("double precision");

                    b.Property<double>("PrecioVentaProducto")
                        .HasColumnType("double precision");

                    b.Property<string>("ProductoDescripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductoImagne")
                        .HasColumnType("text");

                    b.Property<string>("ProductoNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("MarcaId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("NoCap_Data.Data.Roles", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RolId"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RolId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RolId = 1,
                            NombreRol = "Usuario"
                        },
                        new
                        {
                            RolId = 2,
                            NombreRol = "Administrador"
                        });
                });

            modelBuilder.Entity("NoCap_Data.Data.Tamaños", b =>
                {
                    b.Property<int>("TamañoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TamañoId"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TamañoId");

                    b.ToTable("Tamaños");

                    b.HasData(
                        new
                        {
                            TamañoId = 1,
                            nombre = "XL"
                        },
                        new
                        {
                            TamañoId = 2,
                            nombre = "L"
                        },
                        new
                        {
                            TamañoId = 3,
                            nombre = "M"
                        },
                        new
                        {
                            TamañoId = 4,
                            nombre = "S"
                        });
                });

            modelBuilder.Entity("NoCap_Data.Data.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("NoCap_Data.Data.CarritoDetalle", b =>
                {
                    b.HasOne("NoCap_Data.Data.Carritos", "Carritos")
                        .WithMany("CarritoDetalles")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoCap_Data.Data.Colores", "Colores")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("NoCap_Data.Data.Productos", "Productos")
                        .WithMany()
                        .HasForeignKey("ProductoId");

                    b.HasOne("NoCap_Data.Data.Tamaños", "Tamaños")
                        .WithMany()
                        .HasForeignKey("TamañoId");

                    b.Navigation("Carritos");

                    b.Navigation("Colores");

                    b.Navigation("Productos");

                    b.Navigation("Tamaños");
                });

            modelBuilder.Entity("NoCap_Data.Data.Carritos", b =>
                {
                    b.HasOne("NoCap_Data.Data.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NoCap_Data.Data.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NoCap_Data.Data.InventarioDetalle", b =>
                {
                    b.HasOne("NoCap_Data.Data.Colores", "Colores")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoCap_Data.Data.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoCap_Data.Data.Inventario", "Inventario")
                        .WithMany("InventarioDetalles")
                        .HasForeignKey("InventarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoCap_Data.Data.Productos", "Productos")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoCap_Data.Data.Tamaños", "Tamaños")
                        .WithMany()
                        .HasForeignKey("TamañoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colores");

                    b.Navigation("Estados");

                    b.Navigation("Inventario");

                    b.Navigation("Productos");

                    b.Navigation("Tamaños");
                });

            modelBuilder.Entity("NoCap_Data.Data.OrdenCompra", b =>
                {
                    b.HasOne("NoCap_Data.Data.Carritos", "Carritos")
                        .WithMany()
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoCap_Data.Data.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoCap_Data.Data.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carritos");

                    b.Navigation("Estados");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("NoCap_Data.Data.Pagos", b =>
                {
                    b.HasOne("NoCap_Data.Data.OrdenCompra", "OrdenCompra")
                        .WithMany()
                        .HasForeignKey("OrdenCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdenCompra");
                });

            modelBuilder.Entity("NoCap_Data.Data.Productos", b =>
                {
                    b.HasOne("NoCap_Data.Data.Categorias", "Categorias")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoCap_Data.Data.Marcas", "Marcas")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorias");

                    b.Navigation("Marcas");
                });

            modelBuilder.Entity("NoCap_Data.Data.Usuarios", b =>
                {
                    b.HasOne("NoCap_Data.Data.Roles", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("NoCap_Data.Data.Carritos", b =>
                {
                    b.Navigation("CarritoDetalles");
                });

            modelBuilder.Entity("NoCap_Data.Data.Inventario", b =>
                {
                    b.Navigation("InventarioDetalles");
                });

            modelBuilder.Entity("NoCap_Data.Data.Roles", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
