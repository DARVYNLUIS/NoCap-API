// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoCap_Data.Context;

#nullable disable

namespace NoCap_Data.Migrations
{
    [DbContext(typeof(NoCapContext))]
    [Migration("20251030015104_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NoCap_Data.Data.CarritoDetalle", b =>
                {
                    b.Property<int>("CarritoDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarritoDetalleId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CarritoId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrecioProducto")
                        .HasColumnType("float");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.Property<string>("Talla")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarritoDetalleId");

                    b.HasIndex("CarritoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CarritoDetalles");
                });

            modelBuilder.Entity("NoCap_Data.Data.Carritos", b =>
                {
                    b.Property<int>("CarritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarritoId"));

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<double>("MontoTotal")
                        .HasColumnType("float");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("CarritoId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("NoCap_Data.Data.Categorias", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("NoCap_Data.Data.Estados", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoId");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            EstadoId = 1,
                            Nombre = "Pagado"
                        },
                        new
                        {
                            EstadoId = 2,
                            Nombre = "Pendiente"
                        },
                        new
                        {
                            EstadoId = 3,
                            Nombre = "Agotado "
                        },
                        new
                        {
                            EstadoId = 4,
                            Nombre = "Disponibles"
                        },
                        new
                        {
                            EstadoId = 5,
                            Nombre = "Cancelada"
                        },
                        new
                        {
                            EstadoId = 6,
                            Nombre = "En revision"
                        },
                        new
                        {
                            EstadoId = 7,
                            Nombre = "Comprado"
                        });
                });

            modelBuilder.Entity("NoCap_Data.Data.Marcas", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarcaId"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarcaId");

                    b.ToTable("Marcas");

                    b.HasData(
                        new
                        {
                            MarcaId = 1,
                            Activo = true,
                            Nombre = "New Era"
                        },
                        new
                        {
                            MarcaId = 2,
                            Activo = true,
                            Nombre = "Armani"
                        });
                });

            modelBuilder.Entity("NoCap_Data.Data.OrdenCompra", b =>
                {
                    b.Property<int>("OrdenCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdenCompraId"));

                    b.Property<int>("CarritoId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDeCompra")
                        .HasColumnType("datetime2");

                    b.Property<float>("Itbis")
                        .HasColumnType("real");

                    b.Property<int>("MontoTotaal")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("OrdenCompraId");

                    b.HasIndex("CarritoId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("OrdenCompras");
                });

            modelBuilder.Entity("NoCap_Data.Data.Pagos", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagoId"));

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<double>("MontoPagado")
                        .HasColumnType("float");

                    b.Property<int>("OrdenCompraId")
                        .HasColumnType("int");

                    b.Property<bool>("Pagado")
                        .HasColumnType("bit");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("PagoId");

                    b.HasIndex("OrdenCompraId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("NoCap_Data.Data.Productos", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.PrimitiveCollection<string>("Colores")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacionProducto")
                        .HasColumnType("datetime2");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<double>("PrecioCompraProducto")
                        .HasColumnType("float");

                    b.Property<double>("PrecioVentaProducto")
                        .HasColumnType("float");

                    b.Property<string>("ProductoDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductoImagne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stocks")
                        .HasColumnType("int");

                    b.PrimitiveCollection<string>("Tamaños")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("MarcaId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("NoCap_Data.Data.Roles", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RolId = 1,
                            NombreRol = "Usuario"
                        },
                        new
                        {
                            RolId = 2,
                            NombreRol = "Administrador"
                        });
                });

            modelBuilder.Entity("NoCap_Data.Data.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("NoCap_Data.Data.CarritoDetalle", b =>
                {
                    b.HasOne("NoCap_Data.Data.Carritos", "Carritos")
                        .WithMany("CarritoDetalles")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoCap_Data.Data.Productos", "Productos")
                        .WithMany()
                        .HasForeignKey("ProductoId");

                    b.Navigation("Carritos");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("NoCap_Data.Data.Carritos", b =>
                {
                    b.HasOne("NoCap_Data.Data.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NoCap_Data.Data.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NoCap_Data.Data.OrdenCompra", b =>
                {
                    b.HasOne("NoCap_Data.Data.Carritos", "Carritos")
                        .WithMany()
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoCap_Data.Data.Estados", "Estados")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoCap_Data.Data.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carritos");

                    b.Navigation("Estados");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("NoCap_Data.Data.Pagos", b =>
                {
                    b.HasOne("NoCap_Data.Data.OrdenCompra", "OrdenCompra")
                        .WithMany()
                        .HasForeignKey("OrdenCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdenCompra");
                });

            modelBuilder.Entity("NoCap_Data.Data.Productos", b =>
                {
                    b.HasOne("NoCap_Data.Data.Categorias", "Categorias")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoCap_Data.Data.Marcas", "Marcas")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorias");

                    b.Navigation("Marcas");
                });

            modelBuilder.Entity("NoCap_Data.Data.Usuarios", b =>
                {
                    b.HasOne("NoCap_Data.Data.Roles", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("NoCap_Data.Data.Carritos", b =>
                {
                    b.Navigation("CarritoDetalles");
                });

            modelBuilder.Entity("NoCap_Data.Data.Roles", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
